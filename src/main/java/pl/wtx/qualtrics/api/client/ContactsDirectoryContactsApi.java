/*
 * Qualtrics API
 * This is the API specification for Qualtrics platform.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.qualtrics.api.client;

import pl.wtx.qualtrics.api.client.invoker.ApiCallback;
import pl.wtx.qualtrics.api.client.invoker.ApiClient;
import pl.wtx.qualtrics.api.client.invoker.ApiException;
import pl.wtx.qualtrics.api.client.invoker.ApiResponse;
import pl.wtx.qualtrics.api.client.invoker.Configuration;
import pl.wtx.qualtrics.api.client.invoker.Pair;
import pl.wtx.qualtrics.api.client.invoker.ProgressRequestBody;
import pl.wtx.qualtrics.api.client.invoker.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import pl.wtx.qualtrics.api.client.model.CreateDirectoryContactRequest;
import pl.wtx.qualtrics.api.client.model.CreateDirectoryContactResponse;
import pl.wtx.qualtrics.api.client.model.DefaultErrorResponse;
import pl.wtx.qualtrics.api.client.model.GetDirectoryContactResponse;
import pl.wtx.qualtrics.api.client.model.ListDirectoryContactsResponse;
import java.time.OffsetDateTime;
import pl.wtx.qualtrics.api.client.model.PageOfContacts;
import pl.wtx.qualtrics.api.client.model.SearchDirectoryContactRequest;
import pl.wtx.qualtrics.api.client.model.SearchDirectoryContactResponse;
import pl.wtx.qualtrics.api.client.model.UpdateDirectoryContactResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ContactsDirectoryContactsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public ContactsDirectoryContactsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public ContactsDirectoryContactsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for createDirectoryContact
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param createDirectoryContactRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Create Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid arguments response </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createDirectoryContactCall(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createDirectoryContactRequest;

        // create path and map variables
        String localVarPath = "/directories/{directoryId}/contacts"
            .replace("{" + "directoryId" + "}", localVarApiClient.escapeString(directoryId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_token", "public_oauth2", "public_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createDirectoryContactValidateBeforeCall(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'directoryId' is set
        if (directoryId == null) {
            throw new ApiException("Missing the required parameter 'directoryId' when calling createDirectoryContact(Async)");
        }

        return createDirectoryContactCall(directoryId, createDirectoryContactRequest, _callback);

    }

    /**
     * Create Directory Contact
     * Create a single contact in a specific directory. &lt;!--From Readme--&gt; &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users. &gt;  
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param createDirectoryContactRequest  (optional)
     * @return CreateDirectoryContactResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Create Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid arguments response </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public CreateDirectoryContactResponse createDirectoryContact(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest) throws ApiException {
        ApiResponse<CreateDirectoryContactResponse> localVarResp = createDirectoryContactWithHttpInfo(directoryId, createDirectoryContactRequest);
        return localVarResp.getData();
    }

    /**
     * Create Directory Contact
     * Create a single contact in a specific directory. &lt;!--From Readme--&gt; &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users. &gt;  
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param createDirectoryContactRequest  (optional)
     * @return ApiResponse&lt;CreateDirectoryContactResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Create Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid arguments response </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CreateDirectoryContactResponse> createDirectoryContactWithHttpInfo(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest) throws ApiException {
        okhttp3.Call localVarCall = createDirectoryContactValidateBeforeCall(directoryId, createDirectoryContactRequest, null);
        Type localVarReturnType = new TypeToken<CreateDirectoryContactResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Directory Contact (asynchronously)
     * Create a single contact in a specific directory. &lt;!--From Readme--&gt; &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users. &gt;  
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param createDirectoryContactRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Create Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Invalid arguments response </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call createDirectoryContactAsync(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest, final ApiCallback<CreateDirectoryContactResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = createDirectoryContactValidateBeforeCall(directoryId, createDirectoryContactRequest, _callback);
        Type localVarReturnType = new TypeToken<CreateDirectoryContactResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteDirectoryContact
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Delete Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteDirectoryContactCall(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/directories/{directoryId}/contacts/{contactId}"
            .replace("{" + "contactId" + "}", localVarApiClient.escapeString(contactId.toString()))
            .replace("{" + "directoryId" + "}", localVarApiClient.escapeString(directoryId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_token", "public_oauth2", "public_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteDirectoryContactValidateBeforeCall(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contactId' is set
        if (contactId == null) {
            throw new ApiException("Missing the required parameter 'contactId' when calling deleteDirectoryContact(Async)");
        }

        // verify the required parameter 'directoryId' is set
        if (directoryId == null) {
            throw new ApiException("Missing the required parameter 'directoryId' when calling deleteDirectoryContact(Async)");
        }

        return deleteDirectoryContactCall(contactId, directoryId, _callback);

    }

    /**
     * Delete Directory Contact
     * Delete a single contact from a specfic directory. &lt;!--From Readme--&gt; &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users. &gt;  
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @return UpdateDirectoryContactResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Delete Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public UpdateDirectoryContactResponse deleteDirectoryContact(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId) throws ApiException {
        ApiResponse<UpdateDirectoryContactResponse> localVarResp = deleteDirectoryContactWithHttpInfo(contactId, directoryId);
        return localVarResp.getData();
    }

    /**
     * Delete Directory Contact
     * Delete a single contact from a specfic directory. &lt;!--From Readme--&gt; &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users. &gt;  
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @return ApiResponse&lt;UpdateDirectoryContactResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Delete Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<UpdateDirectoryContactResponse> deleteDirectoryContactWithHttpInfo(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId) throws ApiException {
        okhttp3.Call localVarCall = deleteDirectoryContactValidateBeforeCall(contactId, directoryId, null);
        Type localVarReturnType = new TypeToken<UpdateDirectoryContactResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Delete Directory Contact (asynchronously)
     * Delete a single contact from a specfic directory. &lt;!--From Readme--&gt; &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users. &gt;  
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Delete Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call deleteDirectoryContactAsync(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, final ApiCallback<UpdateDirectoryContactResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteDirectoryContactValidateBeforeCall(contactId, directoryId, _callback);
        Type localVarReturnType = new TypeToken<UpdateDirectoryContactResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getDirectoryContact
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param includeSegments Whether to include the contacts&#39; segment memberships data in the response (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A directory contact </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getDirectoryContactCall(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Boolean includeSegments, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/directories/{directoryId}/contacts/{contactId}"
            .replace("{" + "contactId" + "}", localVarApiClient.escapeString(contactId.toString()))
            .replace("{" + "directoryId" + "}", localVarApiClient.escapeString(directoryId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (includeSegments != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeSegments", includeSegments));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_token", "public_oauth2", "public_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getDirectoryContactValidateBeforeCall(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Boolean includeSegments, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contactId' is set
        if (contactId == null) {
            throw new ApiException("Missing the required parameter 'contactId' when calling getDirectoryContact(Async)");
        }

        // verify the required parameter 'directoryId' is set
        if (directoryId == null) {
            throw new ApiException("Missing the required parameter 'directoryId' when calling getDirectoryContact(Async)");
        }

        return getDirectoryContactCall(contactId, directoryId, includeSegments, _callback);

    }

    /**
     * Get Directory Contact
     * Retrieve a single contact from a specific directory.  &lt;!-- theme: warning --&gt; &gt;### This API call is only available to XM Directory users. &gt;
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param includeSegments Whether to include the contacts&#39; segment memberships data in the response (optional)
     * @return GetDirectoryContactResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A directory contact </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public GetDirectoryContactResponse getDirectoryContact(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Boolean includeSegments) throws ApiException {
        ApiResponse<GetDirectoryContactResponse> localVarResp = getDirectoryContactWithHttpInfo(contactId, directoryId, includeSegments);
        return localVarResp.getData();
    }

    /**
     * Get Directory Contact
     * Retrieve a single contact from a specific directory.  &lt;!-- theme: warning --&gt; &gt;### This API call is only available to XM Directory users. &gt;
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param includeSegments Whether to include the contacts&#39; segment memberships data in the response (optional)
     * @return ApiResponse&lt;GetDirectoryContactResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A directory contact </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GetDirectoryContactResponse> getDirectoryContactWithHttpInfo(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Boolean includeSegments) throws ApiException {
        okhttp3.Call localVarCall = getDirectoryContactValidateBeforeCall(contactId, directoryId, includeSegments, null);
        Type localVarReturnType = new TypeToken<GetDirectoryContactResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Directory Contact (asynchronously)
     * Retrieve a single contact from a specific directory.  &lt;!-- theme: warning --&gt; &gt;### This API call is only available to XM Directory users. &gt;
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param includeSegments Whether to include the contacts&#39; segment memberships data in the response (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A directory contact </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getDirectoryContactAsync(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Boolean includeSegments, final ApiCallback<GetDirectoryContactResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getDirectoryContactValidateBeforeCall(contactId, directoryId, includeSegments, _callback);
        Type localVarReturnType = new TypeToken<GetDirectoryContactResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listDirectoryContacts
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param skipToken The start position for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A collection of contacts </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listDirectoryContactsCall(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String skipToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/directories/{directoryId}/contacts"
            .replace("{" + "directoryId" + "}", localVarApiClient.escapeString(directoryId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (skipToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("skipToken", skipToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_token", "public_oauth2", "public_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listDirectoryContactsValidateBeforeCall(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String skipToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'directoryId' is set
        if (directoryId == null) {
            throw new ApiException("Missing the required parameter 'directoryId' when calling listDirectoryContacts(Async)");
        }

        return listDirectoryContactsCall(directoryId, pageSize, skipToken, _callback);

    }

    /**
     * List Directory Contacts
     * Retrieve the contacts in a specific directory. &lt;!--From Readme--&gt; For the last page of results, the value associated with &#x60;nextPage&#x60; will be &#x60;null&#x60;.  &lt;!-- theme: warning --&gt; &gt;### This API call is only available to XM Directory users. &gt;  The new string-based pagination functionality results in improved performance and a lower rate of timeouts. To opt in, append query parameter &#x60;useNewPaginationScheme&#x3D;true&#x60;.n  &lt;!-- theme: danger --&gt; &gt; #### This API call is not available for XMD Lite Directories
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param skipToken The start position for pagination. (optional)
     * @return ListDirectoryContactsResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A collection of contacts </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public ListDirectoryContactsResponse listDirectoryContacts(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String skipToken) throws ApiException {
        ApiResponse<ListDirectoryContactsResponse> localVarResp = listDirectoryContactsWithHttpInfo(directoryId, pageSize, skipToken);
        return localVarResp.getData();
    }

    /**
     * List Directory Contacts
     * Retrieve the contacts in a specific directory. &lt;!--From Readme--&gt; For the last page of results, the value associated with &#x60;nextPage&#x60; will be &#x60;null&#x60;.  &lt;!-- theme: warning --&gt; &gt;### This API call is only available to XM Directory users. &gt;  The new string-based pagination functionality results in improved performance and a lower rate of timeouts. To opt in, append query parameter &#x60;useNewPaginationScheme&#x3D;true&#x60;.n  &lt;!-- theme: danger --&gt; &gt; #### This API call is not available for XMD Lite Directories
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param skipToken The start position for pagination. (optional)
     * @return ApiResponse&lt;ListDirectoryContactsResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A collection of contacts </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ListDirectoryContactsResponse> listDirectoryContactsWithHttpInfo(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String skipToken) throws ApiException {
        okhttp3.Call localVarCall = listDirectoryContactsValidateBeforeCall(directoryId, pageSize, skipToken, null);
        Type localVarReturnType = new TypeToken<ListDirectoryContactsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Directory Contacts (asynchronously)
     * Retrieve the contacts in a specific directory. &lt;!--From Readme--&gt; For the last page of results, the value associated with &#x60;nextPage&#x60; will be &#x60;null&#x60;.  &lt;!-- theme: warning --&gt; &gt;### This API call is only available to XM Directory users. &gt;  The new string-based pagination functionality results in improved performance and a lower rate of timeouts. To opt in, append query parameter &#x60;useNewPaginationScheme&#x3D;true&#x60;.n  &lt;!-- theme: danger --&gt; &gt; #### This API call is not available for XMD Lite Directories
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param skipToken The start position for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A collection of contacts </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listDirectoryContactsAsync(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable String skipToken, final ApiCallback<ListDirectoryContactsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listDirectoryContactsValidateBeforeCall(directoryId, pageSize, skipToken, _callback);
        Type localVarReturnType = new TypeToken<ListDirectoryContactsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listDirectoryOptedOutContacts
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param since The date before which unsubscribed contacts should be excluded. If excluded, all unsubscribed contacts are included regardless of the date on which they unsubscribed from the directory. (optional)
     * @param skipToken The start position for pagination. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful List Directory Contacts Opted Out response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listDirectoryOptedOutContactsCall(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable OffsetDateTime since, @javax.annotation.Nullable String skipToken, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/directories/{directoryId}/contacts/optedOutContacts"
            .replace("{" + "directoryId" + "}", localVarApiClient.escapeString(directoryId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (since != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("since", since));
        }

        if (skipToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("skipToken", skipToken));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_token", "public_oauth2", "public_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listDirectoryOptedOutContactsValidateBeforeCall(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable OffsetDateTime since, @javax.annotation.Nullable String skipToken, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'directoryId' is set
        if (directoryId == null) {
            throw new ApiException("Missing the required parameter 'directoryId' when calling listDirectoryOptedOutContacts(Async)");
        }

        return listDirectoryOptedOutContactsCall(directoryId, pageSize, since, skipToken, _callback);

    }

    /**
     * List Opted Out Directory Contacts
     * Retrieve the contacts, in a specific directory, who have opted out. &lt;!--From Readme--&gt; For the last page of results, the value associated with &#x60;nextPage&#x60; will be &#x60;null&#x60;. &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users.   &lt;!-- theme: danger --&gt; &gt; #### This API call is not available for XMD Lite Directories
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param since The date before which unsubscribed contacts should be excluded. If excluded, all unsubscribed contacts are included regardless of the date on which they unsubscribed from the directory. (optional)
     * @param skipToken The start position for pagination. (optional)
     * @return PageOfContacts
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful List Directory Contacts Opted Out response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public PageOfContacts listDirectoryOptedOutContacts(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable OffsetDateTime since, @javax.annotation.Nullable String skipToken) throws ApiException {
        ApiResponse<PageOfContacts> localVarResp = listDirectoryOptedOutContactsWithHttpInfo(directoryId, pageSize, since, skipToken);
        return localVarResp.getData();
    }

    /**
     * List Opted Out Directory Contacts
     * Retrieve the contacts, in a specific directory, who have opted out. &lt;!--From Readme--&gt; For the last page of results, the value associated with &#x60;nextPage&#x60; will be &#x60;null&#x60;. &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users.   &lt;!-- theme: danger --&gt; &gt; #### This API call is not available for XMD Lite Directories
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param since The date before which unsubscribed contacts should be excluded. If excluded, all unsubscribed contacts are included regardless of the date on which they unsubscribed from the directory. (optional)
     * @param skipToken The start position for pagination. (optional)
     * @return ApiResponse&lt;PageOfContacts&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful List Directory Contacts Opted Out response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PageOfContacts> listDirectoryOptedOutContactsWithHttpInfo(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable OffsetDateTime since, @javax.annotation.Nullable String skipToken) throws ApiException {
        okhttp3.Call localVarCall = listDirectoryOptedOutContactsValidateBeforeCall(directoryId, pageSize, since, skipToken, null);
        Type localVarReturnType = new TypeToken<PageOfContacts>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Opted Out Directory Contacts (asynchronously)
     * Retrieve the contacts, in a specific directory, who have opted out. &lt;!--From Readme--&gt; For the last page of results, the value associated with &#x60;nextPage&#x60; will be &#x60;null&#x60;. &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users.   &lt;!-- theme: danger --&gt; &gt; #### This API call is not available for XMD Lite Directories
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param since The date before which unsubscribed contacts should be excluded. If excluded, all unsubscribed contacts are included regardless of the date on which they unsubscribed from the directory. (optional)
     * @param skipToken The start position for pagination. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful List Directory Contacts Opted Out response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call listDirectoryOptedOutContactsAsync(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable OffsetDateTime since, @javax.annotation.Nullable String skipToken, final ApiCallback<PageOfContacts> _callback) throws ApiException {

        okhttp3.Call localVarCall = listDirectoryOptedOutContactsValidateBeforeCall(directoryId, pageSize, since, skipToken, _callback);
        Type localVarReturnType = new TypeToken<PageOfContacts>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for searchDirectoryContacts
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param skipToken The start position for pagination. (optional)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param includeEmbedded Whether to include a contacts&#39; embedded data in the response (optional)
     * @param includeSegments Whether to include a contacts&#39; segment memberships data in the response (optional, default to false)
     * @param searchDirectoryContactRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A collection of contacts </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchDirectoryContactsCall(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable String skipToken, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Boolean includeEmbedded, @javax.annotation.Nullable Boolean includeSegments, @javax.annotation.Nullable SearchDirectoryContactRequest searchDirectoryContactRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = searchDirectoryContactRequest;

        // create path and map variables
        String localVarPath = "/directories/{directoryId}/contacts/search"
            .replace("{" + "directoryId" + "}", localVarApiClient.escapeString(directoryId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (skipToken != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("skipToken", skipToken));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("pageSize", pageSize));
        }

        if (includeEmbedded != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeEmbedded", includeEmbedded));
        }

        if (includeSegments != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeSegments", includeSegments));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_token", "public_oauth2", "public_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call searchDirectoryContactsValidateBeforeCall(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable String skipToken, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Boolean includeEmbedded, @javax.annotation.Nullable Boolean includeSegments, @javax.annotation.Nullable SearchDirectoryContactRequest searchDirectoryContactRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'directoryId' is set
        if (directoryId == null) {
            throw new ApiException("Missing the required parameter 'directoryId' when calling searchDirectoryContacts(Async)");
        }

        return searchDirectoryContactsCall(directoryId, skipToken, pageSize, includeEmbedded, includeSegments, searchDirectoryContactRequest, _callback);

    }

    /**
     * Search Directory Contacts
     * Retrieve contacts that satisfy conditions you have specified. &lt;!--From Readme--&gt; You can get the _next page_ of contacts for the &#x60;filter&#x60; object by adding the &#x60;skipToken&#x60; value returned in the last request to your query params.  If the &#x60;pageSize&#x60; is set to 10 and all of the 10 contacts in the previous response were the only contacts that satisfied the specified &#x60;filter&#x60;, then the subsequent response when the API call is made with &#x60;skipToken&#x60; in previous response will return zero contacts.  If at any time the number of contacts in the response is less than the &#x60;pageSize&#x60;, then no &#x60;skipToken&#x60; will be included in the response.  &lt;!-- theme: warning --&gt; &gt; ### Search Depth Limitation &gt; Paginating beyond the first 10,000 contacts will result in a &#x60;400&#x60; error response. &gt;  &gt; To return a complete contact list (filtered by your criteria), use the endpoints for [Create Contact Export](../reference/contacts.json/paths/~1directories~1{directoryId}~1export-contacts/post) and [Get Contact Export File](../reference/contacts.json/paths/~1directories~1{directoryId}~1export-contacts~1{fileId}~1file/get).   &lt;!-- theme: danger --&gt;  &gt;### This API call is not available for XMD Lite Directories.  Below is a pagination sequence example.  &lt;!-- title: curl Request: Contacts 1-5 lineNumbers: true --&gt; &#x60;&#x60;&#x60;shell curl &#39;https://yourdatacenterid.qualtrics.com/API/v3/directories/POOL_DBCF6F11V71CiZx/contacts/search?pageSize&#x3D;5&#39; \\\\ -X &#39;POST&#39; \\\\ -H &#39;X-API-TOKEN: yourtokenhere&#39; \\\\ -H &#39;Content-Type: application/json&#39; \\\\ -d &#39;      {        \&quot;filter\&quot;: {          \&quot;comparison\&quot;: \&quot;eq\&quot;,          \&quot;filterType\&quot;: \&quot;lastName\&quot;,          \&quot;value\&quot;: \&quot;test\&quot;        }      }    &#39; &#x60;&#x60;&#x60;       &lt;!-- title: curl Request: Contacts 6-10 lineNumbers: true --&gt; &#x60;&#x60;&#x60;shell curl &#39;https://yourdatacenterid.qualtrics.com/API/v3/directories/POOL_DBCF6F11V71CiZx/contacts/search?pageSize&#x3D;5&amp;skipToken&#x3D;NQ&#x3D;&#x3D;&#39; \\\\ -X &#39;POST&#39; \\\\ -H &#39;X-API-TOKEN: yourtokenhere&#39; \\\\ -H &#39;Content-Type: application/json&#39; \\\\ -d &#39;      {        \&quot;filter\&quot;: {          \&quot;comparison\&quot;: \&quot;eq\&quot;,          \&quot;filterType\&quot;: \&quot;lastName\&quot;,          \&quot;value\&quot;: \&quot;test\&quot;        }      }    &#39; &#x60;&#x60;&#x60;       &lt;!-- title: curl Request: Contacts 11-15 lineNumbers: true --&gt; &#x60;&#x60;&#x60;shell curl &#39;https://yourdatacenterid.qualtrics.com/API/v3/directories/POOL_DBCF6F11V71CiZx/contacts/search?pageSize&#x3D;5&amp;skipToken&#x3D;MTA&#x3D;&#39; \\\\ -X &#39;POST&#39; \\\\ -H &#39;X-API-TOKEN: yourtokenhere&#39; \\\\ -H &#39;Content-Type: application/json&#39; \\\\ -d &#39;      {        \&quot;filter\&quot;: {          \&quot;comparison\&quot;: \&quot;eq\&quot;,          \&quot;filterType\&quot;: \&quot;lastName\&quot;,          \&quot;value\&quot;: \&quot;test\&quot;        }      }    &#39; &#x60;&#x60;&#x60;      &lt;!-- title: json Response: Contacts 1-5 lineNumbers: true --&gt; &#x60;&#x60;&#x60;json {   \&quot;result\&quot;: {     \&quot;elements\&quot;: [       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX001\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX002\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX003\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX004\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX005\&quot;,         ...       },     ],     \&quot;skipToken\&quot;: \&quot;NQ&#x3D;&#x3D;\&quot;   },   \&quot;meta\&quot;: {     \&quot;httpStatus\&quot;: \&quot;200 - OK\&quot;,     \&quot;requestId\&quot;: \&quot;ae8f9d62-217b-4f98-89f8-94fb2b43dcc7\&quot;   } } &#x60;&#x60;&#x60;       &lt;!-- title: json Response: Contacts 6-10 lineNumbers: true --&gt; &#x60;&#x60;&#x60;json {   \&quot;result\&quot;: {     \&quot;elements\&quot;: [       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX006\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX007\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX008\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX009\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX010\&quot;,         ...       },     ],     \&quot;skipToken\&quot;: \&quot;MTA&#x3D;\&quot;   },   \&quot;meta\&quot;: {     \&quot;httpStatus\&quot;: \&quot;200 - OK\&quot;,     \&quot;requestId\&quot;: \&quot;0dd60d0d-4d43-4937-b278-b0b085c6cbca\&quot;   } } &#x60;&#x60;&#x60;       &lt;!-- title: json Response: Contacts 11-15 lineNumbers: true --&gt; &#x60;&#x60;&#x60;json {   \&quot;result\&quot;: {     \&quot;elements\&quot;: [       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX011\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX012\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX013\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX014\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX015\&quot;,         ...       },     ],   },   \&quot;meta\&quot;: {     \&quot;httpStatus\&quot;: \&quot;200 - OK\&quot;,     \&quot;requestId\&quot;: \&quot;1bd55949-0aa4-4533-9c8e-fc897b90c237\&quot;   } } &#x60;&#x60;&#x60;     ## Filter Criterion  Below are the supported filter criteria and their associated JSON syntax.  |Criterion|JSON Syntax|Filter| |---|---|---| |email|&#x60;{\&quot;filterType\&quot;: \&quot;email\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;email\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;pritty\&quot;}&#x60;| |first name|&#x60;{\&quot;filterType\&quot;: \&quot;firstName\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;firstName\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;Iain\&quot;}&#x60;| |last name|&#x60;{\&quot;filterType\&quot;: \&quot;lastName\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;lastName\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;reezy\&quot;}&#x60;| |language|&#x60;{\&quot;filterType\&quot;: \&quot;language\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;language\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;en\&quot;}&#x60;| |phone|&#x60;{\&quot;filterType\&quot;: \&quot;phone\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;phone\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;9193367852\&quot;}&#x60;| |external data reference|&#x60;{\&quot;filterType\&quot;: \&quot;extRef\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;extRef\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;beryl\&quot;}&#x60;| |created|&#x60;{\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;comparison\&quot;: numericComparison,\&quot;value\&quot;: dateOrUTCDateTime}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;2017-03-01 23:18:12\&quot;}&#x60;| |||filter: &#x60;{\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;2017-03-08\&quot;}&#x60;| |last modified date|&#x60;{\&quot;filterType\&quot;: \&quot;lastModified\&quot;,\&quot;comparison\&quot;: numericComparison,\&quot;value\&quot;: dateOrUTCDateTime}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;lastModified\&quot;,\&quot;comparison\&quot;: \&quot;gt\&quot;,\&quot;value\&quot;: \&quot;2013-10-31 23:48:59\&quot;}&#x60;| |in list|&#x60;{\&quot;filterType\&quot;: \&quot;inList\&quot;,\&quot;comparison\&quot;: booleanComparison,\&quot;mailingListId\&quot;: mailingListId}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;inList\&quot;,\&quot;comparison\&quot;: true,\&quot;mailingListId\&quot;: \&quot;CG_abcd1234\&quot;}&#x60;| |info field state|&#x60;{\&quot;filterType\&quot;: \&quot;infoFieldState\&quot;,\&quot;field\&quot;: oneOf(\&quot;email\&quot;, \&quot;extRef\&quot;, \&quot;firstName\&quot;, \&quot;lastName\&quot;), \&quot;comparison\&quot;: oneOf(\&quot;empty\&quot;, \&quot;notEmpty\&quot;)}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;infoFieldState\&quot;,\&quot;field\&quot;: \&quot;lastName\&quot;, \&quot;comparison\&quot;: \&quot;notEmpty\&quot;}&#x60;|    &lt;!-- theme: warning --&gt; &gt;### Leading and trailing spaces &gt;String values associated with JSON keys that are not &#x60;filterType&#x60; or &#x60;comparison&#x60; will have any leading and trailing spaces trimmed off. &gt; &gt;The JSON keys &#x60;filterType&#x60; and &#x60;comparison&#x60; have strict values enumerated herein. Any deviation from those values will result in an error being returned in the API response.    ## Filter Conjunction  The filter &#x60;conjunction&#x60; allows one to combine multiple criteria to retrieve contacts from the directory with precision.  Field &#x60;&#39;conjunction&#39;: &#39;and&#39;&#x60; need to be added as an attribute inside &#x60;filter&#x60; to show that multiple filters need to be combined. The number of filters should be ranged from 2 to 5. If more than 5 filters are combined, an error will be thrown.   |JSON Syntax|Filter| |---|---| |&#x60;{\&quot;conjunction\&quot;: \&quot;and\&quot;,\&quot;filters\&quot;: [filters]}&#x60;|\&quot;filter\&quot;: &#x60;{\&quot;conjunction\&quot;: \&quot;and\&quot;,\&quot;filters\&quot;: [{\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;filterType\&quot;: \&quot;lastName\&quot;,\&quot;value\&quot;: \&quot;test\&quot;},{\&quot;comparison\&quot;: \&quot;gte\&quot;,\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;value\&quot;:\&quot;2018-08-29\&quot;}]}&#x60;|     ## numericComparison  **JSON data type**: string  **Valid values are**: - eq - neq - gt - lt - gte - lte  Value represents a **date** must match the format **yyyy-MM-dd** or **yyyy-MM-dd hh:mm:ss**  ## stringComparison  **JSON data type**: string **Valid values are**: - eq - neq  String comparison is **not case sensitive** for the values it is inspecting. *sEArcH* is equivalent to *search*, *SEARCH*, *SeaRCh* and so on... 
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param skipToken The start position for pagination. (optional)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param includeEmbedded Whether to include a contacts&#39; embedded data in the response (optional)
     * @param includeSegments Whether to include a contacts&#39; segment memberships data in the response (optional, default to false)
     * @param searchDirectoryContactRequest  (optional)
     * @return SearchDirectoryContactResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A collection of contacts </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public SearchDirectoryContactResponse searchDirectoryContacts(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable String skipToken, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Boolean includeEmbedded, @javax.annotation.Nullable Boolean includeSegments, @javax.annotation.Nullable SearchDirectoryContactRequest searchDirectoryContactRequest) throws ApiException {
        ApiResponse<SearchDirectoryContactResponse> localVarResp = searchDirectoryContactsWithHttpInfo(directoryId, skipToken, pageSize, includeEmbedded, includeSegments, searchDirectoryContactRequest);
        return localVarResp.getData();
    }

    /**
     * Search Directory Contacts
     * Retrieve contacts that satisfy conditions you have specified. &lt;!--From Readme--&gt; You can get the _next page_ of contacts for the &#x60;filter&#x60; object by adding the &#x60;skipToken&#x60; value returned in the last request to your query params.  If the &#x60;pageSize&#x60; is set to 10 and all of the 10 contacts in the previous response were the only contacts that satisfied the specified &#x60;filter&#x60;, then the subsequent response when the API call is made with &#x60;skipToken&#x60; in previous response will return zero contacts.  If at any time the number of contacts in the response is less than the &#x60;pageSize&#x60;, then no &#x60;skipToken&#x60; will be included in the response.  &lt;!-- theme: warning --&gt; &gt; ### Search Depth Limitation &gt; Paginating beyond the first 10,000 contacts will result in a &#x60;400&#x60; error response. &gt;  &gt; To return a complete contact list (filtered by your criteria), use the endpoints for [Create Contact Export](../reference/contacts.json/paths/~1directories~1{directoryId}~1export-contacts/post) and [Get Contact Export File](../reference/contacts.json/paths/~1directories~1{directoryId}~1export-contacts~1{fileId}~1file/get).   &lt;!-- theme: danger --&gt;  &gt;### This API call is not available for XMD Lite Directories.  Below is a pagination sequence example.  &lt;!-- title: curl Request: Contacts 1-5 lineNumbers: true --&gt; &#x60;&#x60;&#x60;shell curl &#39;https://yourdatacenterid.qualtrics.com/API/v3/directories/POOL_DBCF6F11V71CiZx/contacts/search?pageSize&#x3D;5&#39; \\\\ -X &#39;POST&#39; \\\\ -H &#39;X-API-TOKEN: yourtokenhere&#39; \\\\ -H &#39;Content-Type: application/json&#39; \\\\ -d &#39;      {        \&quot;filter\&quot;: {          \&quot;comparison\&quot;: \&quot;eq\&quot;,          \&quot;filterType\&quot;: \&quot;lastName\&quot;,          \&quot;value\&quot;: \&quot;test\&quot;        }      }    &#39; &#x60;&#x60;&#x60;       &lt;!-- title: curl Request: Contacts 6-10 lineNumbers: true --&gt; &#x60;&#x60;&#x60;shell curl &#39;https://yourdatacenterid.qualtrics.com/API/v3/directories/POOL_DBCF6F11V71CiZx/contacts/search?pageSize&#x3D;5&amp;skipToken&#x3D;NQ&#x3D;&#x3D;&#39; \\\\ -X &#39;POST&#39; \\\\ -H &#39;X-API-TOKEN: yourtokenhere&#39; \\\\ -H &#39;Content-Type: application/json&#39; \\\\ -d &#39;      {        \&quot;filter\&quot;: {          \&quot;comparison\&quot;: \&quot;eq\&quot;,          \&quot;filterType\&quot;: \&quot;lastName\&quot;,          \&quot;value\&quot;: \&quot;test\&quot;        }      }    &#39; &#x60;&#x60;&#x60;       &lt;!-- title: curl Request: Contacts 11-15 lineNumbers: true --&gt; &#x60;&#x60;&#x60;shell curl &#39;https://yourdatacenterid.qualtrics.com/API/v3/directories/POOL_DBCF6F11V71CiZx/contacts/search?pageSize&#x3D;5&amp;skipToken&#x3D;MTA&#x3D;&#39; \\\\ -X &#39;POST&#39; \\\\ -H &#39;X-API-TOKEN: yourtokenhere&#39; \\\\ -H &#39;Content-Type: application/json&#39; \\\\ -d &#39;      {        \&quot;filter\&quot;: {          \&quot;comparison\&quot;: \&quot;eq\&quot;,          \&quot;filterType\&quot;: \&quot;lastName\&quot;,          \&quot;value\&quot;: \&quot;test\&quot;        }      }    &#39; &#x60;&#x60;&#x60;      &lt;!-- title: json Response: Contacts 1-5 lineNumbers: true --&gt; &#x60;&#x60;&#x60;json {   \&quot;result\&quot;: {     \&quot;elements\&quot;: [       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX001\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX002\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX003\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX004\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX005\&quot;,         ...       },     ],     \&quot;skipToken\&quot;: \&quot;NQ&#x3D;&#x3D;\&quot;   },   \&quot;meta\&quot;: {     \&quot;httpStatus\&quot;: \&quot;200 - OK\&quot;,     \&quot;requestId\&quot;: \&quot;ae8f9d62-217b-4f98-89f8-94fb2b43dcc7\&quot;   } } &#x60;&#x60;&#x60;       &lt;!-- title: json Response: Contacts 6-10 lineNumbers: true --&gt; &#x60;&#x60;&#x60;json {   \&quot;result\&quot;: {     \&quot;elements\&quot;: [       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX006\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX007\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX008\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX009\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX010\&quot;,         ...       },     ],     \&quot;skipToken\&quot;: \&quot;MTA&#x3D;\&quot;   },   \&quot;meta\&quot;: {     \&quot;httpStatus\&quot;: \&quot;200 - OK\&quot;,     \&quot;requestId\&quot;: \&quot;0dd60d0d-4d43-4937-b278-b0b085c6cbca\&quot;   } } &#x60;&#x60;&#x60;       &lt;!-- title: json Response: Contacts 11-15 lineNumbers: true --&gt; &#x60;&#x60;&#x60;json {   \&quot;result\&quot;: {     \&quot;elements\&quot;: [       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX011\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX012\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX013\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX014\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX015\&quot;,         ...       },     ],   },   \&quot;meta\&quot;: {     \&quot;httpStatus\&quot;: \&quot;200 - OK\&quot;,     \&quot;requestId\&quot;: \&quot;1bd55949-0aa4-4533-9c8e-fc897b90c237\&quot;   } } &#x60;&#x60;&#x60;     ## Filter Criterion  Below are the supported filter criteria and their associated JSON syntax.  |Criterion|JSON Syntax|Filter| |---|---|---| |email|&#x60;{\&quot;filterType\&quot;: \&quot;email\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;email\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;pritty\&quot;}&#x60;| |first name|&#x60;{\&quot;filterType\&quot;: \&quot;firstName\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;firstName\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;Iain\&quot;}&#x60;| |last name|&#x60;{\&quot;filterType\&quot;: \&quot;lastName\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;lastName\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;reezy\&quot;}&#x60;| |language|&#x60;{\&quot;filterType\&quot;: \&quot;language\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;language\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;en\&quot;}&#x60;| |phone|&#x60;{\&quot;filterType\&quot;: \&quot;phone\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;phone\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;9193367852\&quot;}&#x60;| |external data reference|&#x60;{\&quot;filterType\&quot;: \&quot;extRef\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;extRef\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;beryl\&quot;}&#x60;| |created|&#x60;{\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;comparison\&quot;: numericComparison,\&quot;value\&quot;: dateOrUTCDateTime}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;2017-03-01 23:18:12\&quot;}&#x60;| |||filter: &#x60;{\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;2017-03-08\&quot;}&#x60;| |last modified date|&#x60;{\&quot;filterType\&quot;: \&quot;lastModified\&quot;,\&quot;comparison\&quot;: numericComparison,\&quot;value\&quot;: dateOrUTCDateTime}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;lastModified\&quot;,\&quot;comparison\&quot;: \&quot;gt\&quot;,\&quot;value\&quot;: \&quot;2013-10-31 23:48:59\&quot;}&#x60;| |in list|&#x60;{\&quot;filterType\&quot;: \&quot;inList\&quot;,\&quot;comparison\&quot;: booleanComparison,\&quot;mailingListId\&quot;: mailingListId}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;inList\&quot;,\&quot;comparison\&quot;: true,\&quot;mailingListId\&quot;: \&quot;CG_abcd1234\&quot;}&#x60;| |info field state|&#x60;{\&quot;filterType\&quot;: \&quot;infoFieldState\&quot;,\&quot;field\&quot;: oneOf(\&quot;email\&quot;, \&quot;extRef\&quot;, \&quot;firstName\&quot;, \&quot;lastName\&quot;), \&quot;comparison\&quot;: oneOf(\&quot;empty\&quot;, \&quot;notEmpty\&quot;)}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;infoFieldState\&quot;,\&quot;field\&quot;: \&quot;lastName\&quot;, \&quot;comparison\&quot;: \&quot;notEmpty\&quot;}&#x60;|    &lt;!-- theme: warning --&gt; &gt;### Leading and trailing spaces &gt;String values associated with JSON keys that are not &#x60;filterType&#x60; or &#x60;comparison&#x60; will have any leading and trailing spaces trimmed off. &gt; &gt;The JSON keys &#x60;filterType&#x60; and &#x60;comparison&#x60; have strict values enumerated herein. Any deviation from those values will result in an error being returned in the API response.    ## Filter Conjunction  The filter &#x60;conjunction&#x60; allows one to combine multiple criteria to retrieve contacts from the directory with precision.  Field &#x60;&#39;conjunction&#39;: &#39;and&#39;&#x60; need to be added as an attribute inside &#x60;filter&#x60; to show that multiple filters need to be combined. The number of filters should be ranged from 2 to 5. If more than 5 filters are combined, an error will be thrown.   |JSON Syntax|Filter| |---|---| |&#x60;{\&quot;conjunction\&quot;: \&quot;and\&quot;,\&quot;filters\&quot;: [filters]}&#x60;|\&quot;filter\&quot;: &#x60;{\&quot;conjunction\&quot;: \&quot;and\&quot;,\&quot;filters\&quot;: [{\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;filterType\&quot;: \&quot;lastName\&quot;,\&quot;value\&quot;: \&quot;test\&quot;},{\&quot;comparison\&quot;: \&quot;gte\&quot;,\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;value\&quot;:\&quot;2018-08-29\&quot;}]}&#x60;|     ## numericComparison  **JSON data type**: string  **Valid values are**: - eq - neq - gt - lt - gte - lte  Value represents a **date** must match the format **yyyy-MM-dd** or **yyyy-MM-dd hh:mm:ss**  ## stringComparison  **JSON data type**: string **Valid values are**: - eq - neq  String comparison is **not case sensitive** for the values it is inspecting. *sEArcH* is equivalent to *search*, *SEARCH*, *SeaRCh* and so on... 
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param skipToken The start position for pagination. (optional)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param includeEmbedded Whether to include a contacts&#39; embedded data in the response (optional)
     * @param includeSegments Whether to include a contacts&#39; segment memberships data in the response (optional, default to false)
     * @param searchDirectoryContactRequest  (optional)
     * @return ApiResponse&lt;SearchDirectoryContactResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A collection of contacts </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SearchDirectoryContactResponse> searchDirectoryContactsWithHttpInfo(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable String skipToken, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Boolean includeEmbedded, @javax.annotation.Nullable Boolean includeSegments, @javax.annotation.Nullable SearchDirectoryContactRequest searchDirectoryContactRequest) throws ApiException {
        okhttp3.Call localVarCall = searchDirectoryContactsValidateBeforeCall(directoryId, skipToken, pageSize, includeEmbedded, includeSegments, searchDirectoryContactRequest, null);
        Type localVarReturnType = new TypeToken<SearchDirectoryContactResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search Directory Contacts (asynchronously)
     * Retrieve contacts that satisfy conditions you have specified. &lt;!--From Readme--&gt; You can get the _next page_ of contacts for the &#x60;filter&#x60; object by adding the &#x60;skipToken&#x60; value returned in the last request to your query params.  If the &#x60;pageSize&#x60; is set to 10 and all of the 10 contacts in the previous response were the only contacts that satisfied the specified &#x60;filter&#x60;, then the subsequent response when the API call is made with &#x60;skipToken&#x60; in previous response will return zero contacts.  If at any time the number of contacts in the response is less than the &#x60;pageSize&#x60;, then no &#x60;skipToken&#x60; will be included in the response.  &lt;!-- theme: warning --&gt; &gt; ### Search Depth Limitation &gt; Paginating beyond the first 10,000 contacts will result in a &#x60;400&#x60; error response. &gt;  &gt; To return a complete contact list (filtered by your criteria), use the endpoints for [Create Contact Export](../reference/contacts.json/paths/~1directories~1{directoryId}~1export-contacts/post) and [Get Contact Export File](../reference/contacts.json/paths/~1directories~1{directoryId}~1export-contacts~1{fileId}~1file/get).   &lt;!-- theme: danger --&gt;  &gt;### This API call is not available for XMD Lite Directories.  Below is a pagination sequence example.  &lt;!-- title: curl Request: Contacts 1-5 lineNumbers: true --&gt; &#x60;&#x60;&#x60;shell curl &#39;https://yourdatacenterid.qualtrics.com/API/v3/directories/POOL_DBCF6F11V71CiZx/contacts/search?pageSize&#x3D;5&#39; \\\\ -X &#39;POST&#39; \\\\ -H &#39;X-API-TOKEN: yourtokenhere&#39; \\\\ -H &#39;Content-Type: application/json&#39; \\\\ -d &#39;      {        \&quot;filter\&quot;: {          \&quot;comparison\&quot;: \&quot;eq\&quot;,          \&quot;filterType\&quot;: \&quot;lastName\&quot;,          \&quot;value\&quot;: \&quot;test\&quot;        }      }    &#39; &#x60;&#x60;&#x60;       &lt;!-- title: curl Request: Contacts 6-10 lineNumbers: true --&gt; &#x60;&#x60;&#x60;shell curl &#39;https://yourdatacenterid.qualtrics.com/API/v3/directories/POOL_DBCF6F11V71CiZx/contacts/search?pageSize&#x3D;5&amp;skipToken&#x3D;NQ&#x3D;&#x3D;&#39; \\\\ -X &#39;POST&#39; \\\\ -H &#39;X-API-TOKEN: yourtokenhere&#39; \\\\ -H &#39;Content-Type: application/json&#39; \\\\ -d &#39;      {        \&quot;filter\&quot;: {          \&quot;comparison\&quot;: \&quot;eq\&quot;,          \&quot;filterType\&quot;: \&quot;lastName\&quot;,          \&quot;value\&quot;: \&quot;test\&quot;        }      }    &#39; &#x60;&#x60;&#x60;       &lt;!-- title: curl Request: Contacts 11-15 lineNumbers: true --&gt; &#x60;&#x60;&#x60;shell curl &#39;https://yourdatacenterid.qualtrics.com/API/v3/directories/POOL_DBCF6F11V71CiZx/contacts/search?pageSize&#x3D;5&amp;skipToken&#x3D;MTA&#x3D;&#39; \\\\ -X &#39;POST&#39; \\\\ -H &#39;X-API-TOKEN: yourtokenhere&#39; \\\\ -H &#39;Content-Type: application/json&#39; \\\\ -d &#39;      {        \&quot;filter\&quot;: {          \&quot;comparison\&quot;: \&quot;eq\&quot;,          \&quot;filterType\&quot;: \&quot;lastName\&quot;,          \&quot;value\&quot;: \&quot;test\&quot;        }      }    &#39; &#x60;&#x60;&#x60;      &lt;!-- title: json Response: Contacts 1-5 lineNumbers: true --&gt; &#x60;&#x60;&#x60;json {   \&quot;result\&quot;: {     \&quot;elements\&quot;: [       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX001\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX002\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX003\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX004\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX005\&quot;,         ...       },     ],     \&quot;skipToken\&quot;: \&quot;NQ&#x3D;&#x3D;\&quot;   },   \&quot;meta\&quot;: {     \&quot;httpStatus\&quot;: \&quot;200 - OK\&quot;,     \&quot;requestId\&quot;: \&quot;ae8f9d62-217b-4f98-89f8-94fb2b43dcc7\&quot;   } } &#x60;&#x60;&#x60;       &lt;!-- title: json Response: Contacts 6-10 lineNumbers: true --&gt; &#x60;&#x60;&#x60;json {   \&quot;result\&quot;: {     \&quot;elements\&quot;: [       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX006\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX007\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX008\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX009\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX010\&quot;,         ...       },     ],     \&quot;skipToken\&quot;: \&quot;MTA&#x3D;\&quot;   },   \&quot;meta\&quot;: {     \&quot;httpStatus\&quot;: \&quot;200 - OK\&quot;,     \&quot;requestId\&quot;: \&quot;0dd60d0d-4d43-4937-b278-b0b085c6cbca\&quot;   } } &#x60;&#x60;&#x60;       &lt;!-- title: json Response: Contacts 11-15 lineNumbers: true --&gt; &#x60;&#x60;&#x60;json {   \&quot;result\&quot;: {     \&quot;elements\&quot;: [       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX011\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX012\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX013\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX014\&quot;,         ...       },       {         \&quot;id\&quot;: \&quot;CID_XXXXXXXXXXXX015\&quot;,         ...       },     ],   },   \&quot;meta\&quot;: {     \&quot;httpStatus\&quot;: \&quot;200 - OK\&quot;,     \&quot;requestId\&quot;: \&quot;1bd55949-0aa4-4533-9c8e-fc897b90c237\&quot;   } } &#x60;&#x60;&#x60;     ## Filter Criterion  Below are the supported filter criteria and their associated JSON syntax.  |Criterion|JSON Syntax|Filter| |---|---|---| |email|&#x60;{\&quot;filterType\&quot;: \&quot;email\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;email\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;pritty\&quot;}&#x60;| |first name|&#x60;{\&quot;filterType\&quot;: \&quot;firstName\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;firstName\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;Iain\&quot;}&#x60;| |last name|&#x60;{\&quot;filterType\&quot;: \&quot;lastName\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;lastName\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;reezy\&quot;}&#x60;| |language|&#x60;{\&quot;filterType\&quot;: \&quot;language\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;language\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;en\&quot;}&#x60;| |phone|&#x60;{\&quot;filterType\&quot;: \&quot;phone\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;phone\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;9193367852\&quot;}&#x60;| |external data reference|&#x60;{\&quot;filterType\&quot;: \&quot;extRef\&quot;,\&quot;comparison\&quot;: stringComparison,\&quot;value\&quot;: plainString}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;extRef\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;beryl\&quot;}&#x60;| |created|&#x60;{\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;comparison\&quot;: numericComparison,\&quot;value\&quot;: dateOrUTCDateTime}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;value\&quot;: \&quot;2017-03-01 23:18:12\&quot;}&#x60;| |||filter: &#x60;{\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;comparison\&quot;: \&quot;neq\&quot;,\&quot;value\&quot;: \&quot;2017-03-08\&quot;}&#x60;| |last modified date|&#x60;{\&quot;filterType\&quot;: \&quot;lastModified\&quot;,\&quot;comparison\&quot;: numericComparison,\&quot;value\&quot;: dateOrUTCDateTime}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;lastModified\&quot;,\&quot;comparison\&quot;: \&quot;gt\&quot;,\&quot;value\&quot;: \&quot;2013-10-31 23:48:59\&quot;}&#x60;| |in list|&#x60;{\&quot;filterType\&quot;: \&quot;inList\&quot;,\&quot;comparison\&quot;: booleanComparison,\&quot;mailingListId\&quot;: mailingListId}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;inList\&quot;,\&quot;comparison\&quot;: true,\&quot;mailingListId\&quot;: \&quot;CG_abcd1234\&quot;}&#x60;| |info field state|&#x60;{\&quot;filterType\&quot;: \&quot;infoFieldState\&quot;,\&quot;field\&quot;: oneOf(\&quot;email\&quot;, \&quot;extRef\&quot;, \&quot;firstName\&quot;, \&quot;lastName\&quot;), \&quot;comparison\&quot;: oneOf(\&quot;empty\&quot;, \&quot;notEmpty\&quot;)}&#x60;|filter: &#x60;{\&quot;filterType\&quot;: \&quot;infoFieldState\&quot;,\&quot;field\&quot;: \&quot;lastName\&quot;, \&quot;comparison\&quot;: \&quot;notEmpty\&quot;}&#x60;|    &lt;!-- theme: warning --&gt; &gt;### Leading and trailing spaces &gt;String values associated with JSON keys that are not &#x60;filterType&#x60; or &#x60;comparison&#x60; will have any leading and trailing spaces trimmed off. &gt; &gt;The JSON keys &#x60;filterType&#x60; and &#x60;comparison&#x60; have strict values enumerated herein. Any deviation from those values will result in an error being returned in the API response.    ## Filter Conjunction  The filter &#x60;conjunction&#x60; allows one to combine multiple criteria to retrieve contacts from the directory with precision.  Field &#x60;&#39;conjunction&#39;: &#39;and&#39;&#x60; need to be added as an attribute inside &#x60;filter&#x60; to show that multiple filters need to be combined. The number of filters should be ranged from 2 to 5. If more than 5 filters are combined, an error will be thrown.   |JSON Syntax|Filter| |---|---| |&#x60;{\&quot;conjunction\&quot;: \&quot;and\&quot;,\&quot;filters\&quot;: [filters]}&#x60;|\&quot;filter\&quot;: &#x60;{\&quot;conjunction\&quot;: \&quot;and\&quot;,\&quot;filters\&quot;: [{\&quot;comparison\&quot;: \&quot;eq\&quot;,\&quot;filterType\&quot;: \&quot;lastName\&quot;,\&quot;value\&quot;: \&quot;test\&quot;},{\&quot;comparison\&quot;: \&quot;gte\&quot;,\&quot;filterType\&quot;: \&quot;created\&quot;,\&quot;value\&quot;:\&quot;2018-08-29\&quot;}]}&#x60;|     ## numericComparison  **JSON data type**: string  **Valid values are**: - eq - neq - gt - lt - gte - lte  Value represents a **date** must match the format **yyyy-MM-dd** or **yyyy-MM-dd hh:mm:ss**  ## stringComparison  **JSON data type**: string **Valid values are**: - eq - neq  String comparison is **not case sensitive** for the values it is inspecting. *sEArcH* is equivalent to *search*, *SEARCH*, *SeaRCh* and so on... 
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param skipToken The start position for pagination. (optional)
     * @param pageSize The maximum number of items to return per request (optional, default to 100)
     * @param includeEmbedded Whether to include a contacts&#39; embedded data in the response (optional)
     * @param includeSegments Whether to include a contacts&#39; segment memberships data in the response (optional, default to false)
     * @param searchDirectoryContactRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> A collection of contacts </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call searchDirectoryContactsAsync(@javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable String skipToken, @javax.annotation.Nullable Integer pageSize, @javax.annotation.Nullable Boolean includeEmbedded, @javax.annotation.Nullable Boolean includeSegments, @javax.annotation.Nullable SearchDirectoryContactRequest searchDirectoryContactRequest, final ApiCallback<SearchDirectoryContactResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = searchDirectoryContactsValidateBeforeCall(directoryId, skipToken, pageSize, includeEmbedded, includeSegments, searchDirectoryContactRequest, _callback);
        Type localVarReturnType = new TypeToken<SearchDirectoryContactResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateDirectoryContact
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param createDirectoryContactRequest  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Update Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateDirectoryContactCall(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = createDirectoryContactRequest;

        // create path and map variables
        String localVarPath = "/directories/{directoryId}/contacts/{contactId}"
            .replace("{" + "contactId" + "}", localVarApiClient.escapeString(contactId.toString()))
            .replace("{" + "directoryId" + "}", localVarApiClient.escapeString(directoryId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "api_token", "public_oauth2", "public_oauth2" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateDirectoryContactValidateBeforeCall(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'contactId' is set
        if (contactId == null) {
            throw new ApiException("Missing the required parameter 'contactId' when calling updateDirectoryContact(Async)");
        }

        // verify the required parameter 'directoryId' is set
        if (directoryId == null) {
            throw new ApiException("Missing the required parameter 'directoryId' when calling updateDirectoryContact(Async)");
        }

        return updateDirectoryContactCall(contactId, directoryId, createDirectoryContactRequest, _callback);

    }

    /**
     * Update Directory Contact
     * Update a single contact in a specific directory. &lt;!--From Readme--&gt; &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users. &gt;  
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param createDirectoryContactRequest  (optional)
     * @return UpdateDirectoryContactResponse
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Update Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public UpdateDirectoryContactResponse updateDirectoryContact(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest) throws ApiException {
        ApiResponse<UpdateDirectoryContactResponse> localVarResp = updateDirectoryContactWithHttpInfo(contactId, directoryId, createDirectoryContactRequest);
        return localVarResp.getData();
    }

    /**
     * Update Directory Contact
     * Update a single contact in a specific directory. &lt;!--From Readme--&gt; &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users. &gt;  
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param createDirectoryContactRequest  (optional)
     * @return ApiResponse&lt;UpdateDirectoryContactResponse&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Update Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<UpdateDirectoryContactResponse> updateDirectoryContactWithHttpInfo(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest) throws ApiException {
        okhttp3.Call localVarCall = updateDirectoryContactValidateBeforeCall(contactId, directoryId, createDirectoryContactRequest, null);
        Type localVarReturnType = new TypeToken<UpdateDirectoryContactResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update Directory Contact (asynchronously)
     * Update a single contact in a specific directory. &lt;!--From Readme--&gt; &lt;!-- theme: warning --&gt;  &gt;### This API call is only available to XM Directory users. &gt;  
     * @param contactId The ID for the desired contact. (required)
     * @param directoryId The directory ID, also known as a pool ID. (required)
     * @param createDirectoryContactRequest  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table border="1">
       <caption>Response Details</caption>
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Successful Update Directory Contact Response </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad Request </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> A default error response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call updateDirectoryContactAsync(@javax.annotation.Nonnull String contactId, @javax.annotation.Nonnull String directoryId, @javax.annotation.Nullable CreateDirectoryContactRequest createDirectoryContactRequest, final ApiCallback<UpdateDirectoryContactResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateDirectoryContactValidateBeforeCall(contactId, directoryId, createDirectoryContactRequest, _callback);
        Type localVarReturnType = new TypeToken<UpdateDirectoryContactResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
