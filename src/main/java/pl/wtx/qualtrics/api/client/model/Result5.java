/*
 * Qualtrics API
 * This is the API specification for Qualtrics platform.
 *
 * The version of the OpenAPI document: 3.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package pl.wtx.qualtrics.api.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.jackson.nullable.JsonNullable;
import pl.wtx.qualtrics.api.client.model.MailingListMembershipDetails;
import pl.wtx.qualtrics.api.client.model.SegmentMembershipDetails;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import pl.wtx.qualtrics.api.client.invoker.JSON;

/**
 * Information in the result.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.13.0")
public class Result5 {
  public static final String SERIALIZED_NAME_CONTACT_ID = "contactId";
  @SerializedName(SERIALIZED_NAME_CONTACT_ID)
  @javax.annotation.Nullable
  private String contactId;

  public static final String SERIALIZED_NAME_CREATION_DATE = "creationDate";
  @SerializedName(SERIALIZED_NAME_CREATION_DATE)
  @javax.annotation.Nullable
  private Long creationDate;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "lastModified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  @javax.annotation.Nullable
  private Long lastModified;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  @javax.annotation.Nullable
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  @javax.annotation.Nullable
  private String lastName;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  @javax.annotation.Nullable
  private String email;

  public static final String SERIALIZED_NAME_EMAIL_DOMAIN = "emailDomain";
  @SerializedName(SERIALIZED_NAME_EMAIL_DOMAIN)
  @javax.annotation.Nullable
  private String emailDomain;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  @javax.annotation.Nullable
  private String phone;

  public static final String SERIALIZED_NAME_EXT_REF = "extRef";
  @SerializedName(SERIALIZED_NAME_EXT_REF)
  @javax.annotation.Nullable
  private String extRef;

  public static final String SERIALIZED_NAME_EMBEDDED_DATA = "embeddedData";
  @SerializedName(SERIALIZED_NAME_EMBEDDED_DATA)
  @javax.annotation.Nullable
  private Map<String, String> embeddedData = new HashMap<>();

  public static final String SERIALIZED_NAME_LANGUAGE = "language";
  @SerializedName(SERIALIZED_NAME_LANGUAGE)
  @javax.annotation.Nullable
  private String language;

  public static final String SERIALIZED_NAME_SKIPPED = "skipped";
  @Deprecated
  @SerializedName(SERIALIZED_NAME_SKIPPED)
  @javax.annotation.Nullable
  private Boolean skipped;

  public static final String SERIALIZED_NAME_SEGMENT_MEMBERSHIP = "segmentMembership";
  @SerializedName(SERIALIZED_NAME_SEGMENT_MEMBERSHIP)
  @javax.annotation.Nullable
  private Map<String, SegmentMembershipDetails> segmentMembership = new HashMap<>();

  public static final String SERIALIZED_NAME_DIRECTORY_UNSUBSCRIBED = "directoryUnsubscribed";
  @SerializedName(SERIALIZED_NAME_DIRECTORY_UNSUBSCRIBED)
  @javax.annotation.Nullable
  private Boolean directoryUnsubscribed;

  public static final String SERIALIZED_NAME_DIRECTORY_UNSUBSCRIBE_DATE = "directoryUnsubscribeDate";
  @SerializedName(SERIALIZED_NAME_DIRECTORY_UNSUBSCRIBE_DATE)
  @javax.annotation.Nullable
  private Long directoryUnsubscribeDate;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  @javax.annotation.Nullable
  private Map<String, String> stats;

  public static final String SERIALIZED_NAME_MAILING_LIST_MEMBERSHIP = "mailingListMembership";
  @SerializedName(SERIALIZED_NAME_MAILING_LIST_MEMBERSHIP)
  @javax.annotation.Nullable
  private Map<String, MailingListMembershipDetails> mailingListMembership;

  public Result5() {
  }

  public Result5 contactId(@javax.annotation.Nullable String contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * 
   * @return contactId
   */
  @javax.annotation.Nullable
  public String getContactId() {
    return contactId;
  }

  public void setContactId(@javax.annotation.Nullable String contactId) {
    this.contactId = contactId;
  }


  public Result5 creationDate(@javax.annotation.Nullable Long creationDate) {
    this.creationDate = creationDate;
    return this;
  }

  /**
   * Date and time this contact&#39;s record was created. Expressed in milliseconds since the Unix epoch, January 1, 1970 at 0:00 UTC.
   * @return creationDate
   */
  @javax.annotation.Nullable
  public Long getCreationDate() {
    return creationDate;
  }

  public void setCreationDate(@javax.annotation.Nullable Long creationDate) {
    this.creationDate = creationDate;
  }


  public Result5 lastModified(@javax.annotation.Nullable Long lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * Date and time this record was last modified. Expressed in milliseconds since the Unix epoch, January 1, 1970 at 0:00 UTC.
   * @return lastModified
   */
  @javax.annotation.Nullable
  public Long getLastModified() {
    return lastModified;
  }

  public void setLastModified(@javax.annotation.Nullable Long lastModified) {
    this.lastModified = lastModified;
  }


  public Result5 firstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * THe contact&#39;s first name.
   * @return firstName
   */
  @javax.annotation.Nullable
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(@javax.annotation.Nullable String firstName) {
    this.firstName = firstName;
  }


  public Result5 lastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * The contact&#39;s last name.
   * @return lastName
   */
  @javax.annotation.Nullable
  public String getLastName() {
    return lastName;
  }

  public void setLastName(@javax.annotation.Nullable String lastName) {
    this.lastName = lastName;
  }


  public Result5 email(@javax.annotation.Nullable String email) {
    this.email = email;
    return this;
  }

  /**
   * The contact&#39;s email address.
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(@javax.annotation.Nullable String email) {
    this.email = email;
  }


  public Result5 emailDomain(@javax.annotation.Nullable String emailDomain) {
    this.emailDomain = emailDomain;
    return this;
  }

  /**
   * The contact&#39;s email domain.
   * @return emailDomain
   */
  @javax.annotation.Nullable
  public String getEmailDomain() {
    return emailDomain;
  }

  public void setEmailDomain(@javax.annotation.Nullable String emailDomain) {
    this.emailDomain = emailDomain;
  }


  public Result5 phone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * The contact&#39;s phone number.
   * @return phone
   */
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }

  public void setPhone(@javax.annotation.Nullable String phone) {
    this.phone = phone;
  }


  public Result5 extRef(@javax.annotation.Nullable String extRef) {
    this.extRef = extRef;
    return this;
  }

  /**
   * External reference information for the contact.
   * @return extRef
   */
  @javax.annotation.Nullable
  public String getExtRef() {
    return extRef;
  }

  public void setExtRef(@javax.annotation.Nullable String extRef) {
    this.extRef = extRef;
  }


  public Result5 embeddedData(@javax.annotation.Nullable Map<String, String> embeddedData) {
    this.embeddedData = embeddedData;
    return this;
  }

  public Result5 putEmbeddedDataItem(String key, String embeddedDataItem) {
    if (this.embeddedData == null) {
      this.embeddedData = new HashMap<>();
    }
    this.embeddedData.put(key, embeddedDataItem);
    return this;
  }

  /**
   * Embedded data for the contact.
   * @return embeddedData
   */
  @javax.annotation.Nullable
  public Map<String, String> getEmbeddedData() {
    return embeddedData;
  }

  public void setEmbeddedData(@javax.annotation.Nullable Map<String, String> embeddedData) {
    this.embeddedData = embeddedData;
  }


  public Result5 language(@javax.annotation.Nullable String language) {
    this.language = language;
    return this;
  }

  /**
   * The contact&#39;s preferred language.
   * @return language
   */
  @javax.annotation.Nullable
  public String getLanguage() {
    return language;
  }

  public void setLanguage(@javax.annotation.Nullable String language) {
    this.language = language;
  }


  @Deprecated
  public Result5 skipped(@javax.annotation.Nullable Boolean skipped) {
    this.skipped = skipped;
    return this;
  }

  /**
   * This is a legacy field whose value will always be null
   * @return skipped
   * @deprecated
   */
  @Deprecated
  @javax.annotation.Nullable
  public Boolean getSkipped() {
    return skipped;
  }

  @Deprecated
  public void setSkipped(@javax.annotation.Nullable Boolean skipped) {
    this.skipped = skipped;
  }


  public Result5 segmentMembership(@javax.annotation.Nullable Map<String, SegmentMembershipDetails> segmentMembership) {
    this.segmentMembership = segmentMembership;
    return this;
  }

  public Result5 putSegmentMembershipItem(String key, SegmentMembershipDetails segmentMembershipItem) {
    if (this.segmentMembership == null) {
      this.segmentMembership = new HashMap<>();
    }
    this.segmentMembership.put(key, segmentMembershipItem);
    return this;
  }

  /**
   * A map whose keys are segment IDs and whose values are objects detailing the contact&#39;s membership to the corresponding segment.
   * @return segmentMembership
   */
  @javax.annotation.Nullable
  public Map<String, SegmentMembershipDetails> getSegmentMembership() {
    return segmentMembership;
  }

  public void setSegmentMembership(@javax.annotation.Nullable Map<String, SegmentMembershipDetails> segmentMembership) {
    this.segmentMembership = segmentMembership;
  }


  public Result5 directoryUnsubscribed(@javax.annotation.Nullable Boolean directoryUnsubscribed) {
    this.directoryUnsubscribed = directoryUnsubscribed;
    return this;
  }

  /**
   * Indicates whether the user opted out of the directory.
   * @return directoryUnsubscribed
   */
  @javax.annotation.Nullable
  public Boolean getDirectoryUnsubscribed() {
    return directoryUnsubscribed;
  }

  public void setDirectoryUnsubscribed(@javax.annotation.Nullable Boolean directoryUnsubscribed) {
    this.directoryUnsubscribed = directoryUnsubscribed;
  }


  public Result5 directoryUnsubscribeDate(@javax.annotation.Nullable Long directoryUnsubscribeDate) {
    this.directoryUnsubscribeDate = directoryUnsubscribeDate;
    return this;
  }

  /**
   * Date and time the user opted out of the directory. Expressed in milliseconds since the Unix epoch, January 1, 1970 at 0:00 UTC.
   * @return directoryUnsubscribeDate
   */
  @javax.annotation.Nullable
  public Long getDirectoryUnsubscribeDate() {
    return directoryUnsubscribeDate;
  }

  public void setDirectoryUnsubscribeDate(@javax.annotation.Nullable Long directoryUnsubscribeDate) {
    this.directoryUnsubscribeDate = directoryUnsubscribeDate;
  }


  public Result5 stats(@javax.annotation.Nullable Map<String, String> stats) {
    this.stats = stats;
    return this;
  }

  public Result5 putStatsItem(String key, String statsItem) {
    if (this.stats == null) {
      this.stats = new HashMap<>();
    }
    this.stats.put(key, statsItem);
    return this;
  }

  /**
   * Statistics relevant to the request. All Month Stats are deprecated and no longer updated.
   * @return stats
   */
  @javax.annotation.Nullable
  public Map<String, String> getStats() {
    return stats;
  }

  public void setStats(@javax.annotation.Nullable Map<String, String> stats) {
    this.stats = stats;
  }


  public Result5 mailingListMembership(@javax.annotation.Nullable Map<String, MailingListMembershipDetails> mailingListMembership) {
    this.mailingListMembership = mailingListMembership;
    return this;
  }

  public Result5 putMailingListMembershipItem(String key, MailingListMembershipDetails mailingListMembershipItem) {
    if (this.mailingListMembership == null) {
      this.mailingListMembership = new HashMap<>();
    }
    this.mailingListMembership.put(key, mailingListMembershipItem);
    return this;
  }

  /**
   * The DirectoryContactMailingLists object contains information about the mailing lists this contact belongs to. The object contains one object for each mailing list, with the mailing list ID as the object name.
   * @return mailingListMembership
   */
  @javax.annotation.Nullable
  public Map<String, MailingListMembershipDetails> getMailingListMembership() {
    return mailingListMembership;
  }

  public void setMailingListMembership(@javax.annotation.Nullable Map<String, MailingListMembershipDetails> mailingListMembership) {
    this.mailingListMembership = mailingListMembership;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Result5 result5 = (Result5) o;
    return Objects.equals(this.contactId, result5.contactId) &&
        Objects.equals(this.creationDate, result5.creationDate) &&
        Objects.equals(this.lastModified, result5.lastModified) &&
        Objects.equals(this.firstName, result5.firstName) &&
        Objects.equals(this.lastName, result5.lastName) &&
        Objects.equals(this.email, result5.email) &&
        Objects.equals(this.emailDomain, result5.emailDomain) &&
        Objects.equals(this.phone, result5.phone) &&
        Objects.equals(this.extRef, result5.extRef) &&
        Objects.equals(this.embeddedData, result5.embeddedData) &&
        Objects.equals(this.language, result5.language) &&
        Objects.equals(this.skipped, result5.skipped) &&
        Objects.equals(this.segmentMembership, result5.segmentMembership) &&
        Objects.equals(this.directoryUnsubscribed, result5.directoryUnsubscribed) &&
        Objects.equals(this.directoryUnsubscribeDate, result5.directoryUnsubscribeDate) &&
        Objects.equals(this.stats, result5.stats) &&
        Objects.equals(this.mailingListMembership, result5.mailingListMembership);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactId, creationDate, lastModified, firstName, lastName, email, emailDomain, phone, extRef, embeddedData, language, skipped, segmentMembership, directoryUnsubscribed, directoryUnsubscribeDate, stats, mailingListMembership);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Result5 {\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    creationDate: ").append(toIndentedString(creationDate)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    emailDomain: ").append(toIndentedString(emailDomain)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    extRef: ").append(toIndentedString(extRef)).append("\n");
    sb.append("    embeddedData: ").append(toIndentedString(embeddedData)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    skipped: ").append(toIndentedString(skipped)).append("\n");
    sb.append("    segmentMembership: ").append(toIndentedString(segmentMembership)).append("\n");
    sb.append("    directoryUnsubscribed: ").append(toIndentedString(directoryUnsubscribed)).append("\n");
    sb.append("    directoryUnsubscribeDate: ").append(toIndentedString(directoryUnsubscribeDate)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    mailingListMembership: ").append(toIndentedString(mailingListMembership)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contactId");
    openapiFields.add("creationDate");
    openapiFields.add("lastModified");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("email");
    openapiFields.add("emailDomain");
    openapiFields.add("phone");
    openapiFields.add("extRef");
    openapiFields.add("embeddedData");
    openapiFields.add("language");
    openapiFields.add("skipped");
    openapiFields.add("segmentMembership");
    openapiFields.add("directoryUnsubscribed");
    openapiFields.add("directoryUnsubscribeDate");
    openapiFields.add("stats");
    openapiFields.add("mailingListMembership");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Result5
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Result5.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Result5 is not found in the empty JSON string", Result5.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Result5.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Result5` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("contactId") != null && !jsonObj.get("contactId").isJsonNull()) && !jsonObj.get("contactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactId").toString()));
      }
      if ((jsonObj.get("firstName") != null && !jsonObj.get("firstName").isJsonNull()) && !jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if ((jsonObj.get("lastName") != null && !jsonObj.get("lastName").isJsonNull()) && !jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if ((jsonObj.get("emailDomain") != null && !jsonObj.get("emailDomain").isJsonNull()) && !jsonObj.get("emailDomain").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `emailDomain` to be a primitive type in the JSON string but got `%s`", jsonObj.get("emailDomain").toString()));
      }
      if ((jsonObj.get("phone") != null && !jsonObj.get("phone").isJsonNull()) && !jsonObj.get("phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("phone").toString()));
      }
      if ((jsonObj.get("extRef") != null && !jsonObj.get("extRef").isJsonNull()) && !jsonObj.get("extRef").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extRef` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extRef").toString()));
      }
      if ((jsonObj.get("language") != null && !jsonObj.get("language").isJsonNull()) && !jsonObj.get("language").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `language` to be a primitive type in the JSON string but got `%s`", jsonObj.get("language").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Result5.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Result5' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Result5> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Result5.class));

       return (TypeAdapter<T>) new TypeAdapter<Result5>() {
           @Override
           public void write(JsonWriter out, Result5 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Result5 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Result5 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Result5
   * @throws IOException if the JSON string is invalid with respect to Result5
   */
  public static Result5 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Result5.class);
  }

  /**
   * Convert an instance of Result5 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

